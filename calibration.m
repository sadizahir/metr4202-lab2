% Auto-generated by cameraCalibrator app on 10-Sep-2015
%-------------------------------------------------------
clear; 
cam = webcam; % assign webcam
NoOfImage = 4; % number of images

%image_capture = zeros(1, 5, NoOfImage, uint8); % set image array

for i = 1:NoOfImage
    image_capture = snapshot(cam);  % take camera shot
    filename = strcat('D:\calib_example\Image',int2str(i),'.png')
    imwrite(image_capture,filename)
    pause(1); % wait 1 second
end

% Define images to process
imageFileNames = {'D:\calib_example\Image1.png',...
    'D:\calib_example\Image2.png',...
    'D:\calib_example\Image3.png',...
    'D:\calib_example\Image4.png',...
    }

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames)
imageFileNames = imageFileNames(imagesUsed)

% Generate world coordinates of the corners of the squares
squareSize = 27;  % in units of 'mm'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'mm');

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams, 'BarGraph');

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
originalImage = imread(imageFileNames{1});
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('SparseReconstructionExample')
